{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app/src/PhoneList.js\";\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nclass PhoneList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteShortNumberHandler = e => {\n      e.preventDefault();\n      console.log(e.target.id);\n      this.props.onSubmitSN(e.target.id);\n    };\n\n    this.deletePublicNumberHandler = e => {\n      e.preventDefault();\n      this.props.onSubmitPN(e.target.id);\n    };\n  }\n\n  render() {\n    const cells = this.props.data.map(item => {\n      return React.createElement(Table.Row, {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '10%',\n          border: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, item.id), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '30%',\n          border: '1px solid #ccc',\n          borderRightColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, item.number), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '10%',\n          border: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: item.id,\n        onClick: this.deletePublicNumberHandler,\n        className: \"ui icon button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        \"aria-hidden\": \"true\",\n        className: \"trash alternate icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }))), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '20%',\n          border: '1px solid #ccc',\n          borderRightColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, item.short_number), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '10%',\n          border: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, item.short_number !== undefined ? React.createElement(\"button\", {\n        id: item.short_number,\n        onClick: this.deleteShortNumberHandler,\n        className: \"ui icon button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        \"aria-hidden\": \"true\",\n        className: \"trash alternate icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })) : null));\n    }); //celled\n    //collapsing\n\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: '20%',\n        marginRight: '20%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Table, {\n      celled: true,\n      structured: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      textAlign: \"center\",\n      style: {\n        border: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Table.HeaderCell, {\n      textAlign: \"center\",\n      style: {\n        border: '1px solid #ccc'\n      },\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Public Number\"), React.createElement(Table.HeaderCell, {\n      textAlign: \"center\",\n      style: {\n        border: '1px solid #ccc'\n      },\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Short Number\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, cells)));\n  }\n\n}\n\n;\nexport default PhoneList;\n/*\nrender() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<Table.Row>\n\t\t\t\t\t<Table.Cell>{shortNumber.id}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.short_number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' >{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<Table celled structured>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Public Number</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Short Number</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n*/\n\n/*render() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td style={{width: '10%'}}>{shortNumber.id}</td>\n\t\t\t\t\t<td style={{width: '10%', border: '1px solid #ccc', borderRightColor: 'transparent'}}>{shortNumber.number}</td>\n\t\t\t\t\t<td><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></td>\n\t\t\t\t\t<td>{shortNumber.short_number}</td>\n\t\t\t\t\t<td>{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<table className=\"ui celled structured table\" style={{tableLayout: 'auto', borderCollapse: 'collapse', width: '100%'}}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Id</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Public Number</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Short Number</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n*/","map":{"version":3,"sources":["/home/cuong/react_projects/my-app/src/PhoneList.js"],"names":["React","Table","PhoneList","Component","deleteShortNumberHandler","e","preventDefault","console","log","target","id","props","onSubmitSN","deletePublicNumberHandler","onSubmitPN","render","cells","data","map","item","width","border","borderRightColor","number","short_number","undefined","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nclass PhoneList extends React.Component {\n\n\tdeleteShortNumberHandler = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(e.target.id);\n\t\tthis.props.onSubmitSN(e.target.id)\n\t}\n\n\tdeletePublicNumberHandler = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.onSubmitPN(e.target.id)\n\t}\n\n\trender() {\n\n\t\tconst cells = this.props.data.map(item => {\n\t\t\treturn (\n\t\t\t\t<Table.Row key={item.id}>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{width: '10%', border: '1px solid #ccc'}}>{item.id}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{width: '30%', border: '1px solid #ccc', borderRightColor: 'transparent'}}>{item.number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{width: '10%', border: '1px solid #ccc'}}><button id={item.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{width: '20%', border: '1px solid #ccc', borderRightColor: 'transparent'}}>{item.short_number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{width: '10%', border: '1px solid #ccc'}}>{item.short_number !== undefined ? <button id={item.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '20%', marginRight: '20%' }}>\n\t\t\t\t<Table celled structured>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' style={{border: '1px solid #ccc'}}>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' style={{border: '1px solid #ccc'}} colSpan='2'>Public Number</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' style={{border: '1px solid #ccc'}} colSpan='2'>Short Number</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{cells}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default PhoneList;\n\n/*\nrender() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<Table.Row>\n\t\t\t\t\t<Table.Cell>{shortNumber.id}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.short_number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' >{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<Table celled structured>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Public Number</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Short Number</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n*/\n\n/*render() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td style={{width: '10%'}}>{shortNumber.id}</td>\n\t\t\t\t\t<td style={{width: '10%', border: '1px solid #ccc', borderRightColor: 'transparent'}}>{shortNumber.number}</td>\n\t\t\t\t\t<td><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></td>\n\t\t\t\t\t<td>{shortNumber.short_number}</td>\n\t\t\t\t\t<td>{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<table className=\"ui celled structured table\" style={{tableLayout: 'auto', borderCollapse: 'collapse', width: '100%'}}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Id</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Public Number</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Short Number</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n*/"]},"metadata":{},"sourceType":"module"}