{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app-auth/src/APICalls/AddReferenceCall.js\";\nimport React from 'react';\n\nclass AddReferenceCall extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      first_time: '',\n      a_number: '',\n      date: '',\n      time: '',\n      error: null,\n      errors: {\n        a_number: '',\n        date: '',\n        time: ''\n      }\n    };\n\n    this.validateTime = inputText => {\n      const timeformat = /(2[0-3]|[01][0-9]):[0-5][0-9]/;\n\n      if (inputText.value.match(timeformat)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.validateDate = inputText => {\n      const dateformat = /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/; // Match the date format through regular expression\n\n      if (inputText.value.match(dateformat)) {\n        const pdate = inputText.value.split('-');\n        const dd = parseInt(pdate[0]);\n        const mm = parseInt(pdate[1]);\n        const yy = parseInt(pdate[2]); // Create list of days of a month [assume there is no leap year by default]\n\n        const ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        if (mm == 1 || mm > 2) {\n          if (dd > ListofDays[mm - 1]) {\n            return false;\n          }\n        }\n\n        if (mm == 2) {\n          let lyear = false;\n\n          if (!(yy % 4) && yy % 100 || !(yy % 400)) {\n            lyear = true;\n          }\n\n          if (lyear == false && dd >= 29) {\n            return false;\n          }\n\n          if (lyear == true && dd > 29) {\n            return false;\n          }\n        }\n      } else {\n        return false;\n      }\n    };\n\n    this.onChange = e => {\n      if (this.state.errors.a_number !== '' || this.state.errors.date !== '' || this.state.errors.time !== '') {\n        this.setState({\n          errors: {\n            a_number: '',\n            date: '',\n            time: ''\n          }\n        });\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.postDataHandler = e => {\n      if (this.state.a_number === '' && this.state.date === '' && this.state.time === '') {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            a_number: 'Phone number is required',\n            date: 'Date is required',\n            time: 'Time number is required'\n          }\n        });\n        return;\n      }\n\n      if (!/^[3][5][8][0-9]/.test(this.state.a_number)) {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            a_number: 'Invalid, must start with 358'\n          }\n        });\n        return;\n      }\n\n      if (this.state.a_number === '') {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            a_number: 'Phone number is required'\n          }\n        });\n        return;\n      }\n\n      if (this.validateDate(this.state.date)) {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            date: 'Invalid date'\n          }\n        });\n        return;\n      }\n\n      if (this.state.date === '') {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            date: 'Date is required'\n          }\n        });\n        return;\n      }\n\n      if (this.validateTime(this.state.time)) {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            time: 'Invalid time'\n          }\n        });\n        return;\n      }\n\n      if (this.state.time === '') {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            time: 'Time number is required'\n          }\n        });\n        return;\n      }\n\n      const a = '2019-11-17';\n      const b = '17:11';\n      const c = a.concat(' ').concat(b);\n      console.log(c);\n\n      if (this.state.errors.a_number === '' && this.state.errors.date === '' && this.state.errors.time === '') {\n        fetch('http://localhost/conferenceCallAPI.php', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json'\n          },\n          body: JSON.stringify({\n            a_number: this.state.a_number,\n            first_time: this.state.date.concat(' ').concat(this.state.time)\n          })\n        }).catch(error => this.setState({\n          error\n        }));\n      } else {\n        console.log(this.state.errors);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      type: \"text\",\n      value: this.state.name,\n      className: \"form-control\",\n      placeholder: \"Enter Your Name\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), this.state.errors.name ? React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.errors.name) : null), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"public_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      type: \"text\",\n      value: this.state.public_number,\n      className: \"form-control\",\n      placeholder: \"Enter Your Phone Number\",\n      name: \"public_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), this.state.errors.public_number ? React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.errors.public_number) : null), React.createElement(\"button\", {\n      onClick: this.postDataHandler,\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default AddReferenceCall;","map":{"version":3,"sources":["/home/cuong/react_projects/my-app-auth/src/APICalls/AddReferenceCall.js"],"names":["React","AddReferenceCall","Component","state","first_time","a_number","date","time","error","errors","validateTime","inputText","timeformat","value","match","validateDate","dateformat","pdate","split","dd","parseInt","mm","yy","ListofDays","lyear","onChange","e","setState","target","name","postDataHandler","preventDefault","test","a","b","c","concat","console","log","fetch","method","headers","Accept","body","JSON","stringify","catch","render","public_number"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass AddReferenceCall extends React.Component {\n  state = {\n    first_time: '',\n    a_number: '',\n    date: '',\n    time: '',\n    error: null,\n    errors: {\n      a_number: '',\n      date: '',\n      time: ''\n    }\n  };\n\n  validateTime = inputText => {\n    const timeformat = /(2[0-3]|[01][0-9]):[0-5][0-9]/;\n    if (inputText.value.match(timeformat)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  validateDate = inputText => {\n    const dateformat = /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/;\n    // Match the date format through regular expression\n    if (inputText.value.match(dateformat)) {\n      const pdate = inputText.value.split('-');\n      const dd = parseInt(pdate[0]);\n      const mm = parseInt(pdate[1]);\n      const yy = parseInt(pdate[2]);\n      // Create list of days of a month [assume there is no leap year by default]\n      const ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n      if (mm == 1 || mm > 2) {\n        if (dd > ListofDays[mm - 1]) {\n          return false;\n        }\n      }\n      if (mm == 2) {\n        let lyear = false;\n        if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\n          lyear = true;\n        }\n        if (lyear == false && dd >= 29) {\n          return false;\n        }\n        if (lyear == true && dd > 29) {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  };\n\n  onChange = e => {\n    if (\n      this.state.errors.a_number !== '' ||\n      this.state.errors.date !== '' ||\n      this.state.errors.time !== ''\n    ) {\n      this.setState({\n        errors: {\n          a_number: '',\n          date: '',\n          time: ''\n        }\n      });\n    }\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  postDataHandler = e => {\n    if (\n      this.state.a_number === '' &&\n      this.state.date === '' &&\n      this.state.time === ''\n    ) {\n      e.preventDefault();\n      this.setState({\n        errors: {\n          a_number: 'Phone number is required',\n          date: 'Date is required',\n          time: 'Time number is required'\n        }\n      });\n      return;\n    }\n\n    if (!/^[3][5][8][0-9]/.test(this.state.a_number)) {\n      e.preventDefault();\n      this.setState({\n        errors: { a_number: 'Invalid, must start with 358' }\n      });\n      return;\n    }\n\n    if (this.state.a_number === '') {\n      e.preventDefault();\n      this.setState({\n        errors: { a_number: 'Phone number is required' }\n      });\n      return;\n    }\n\n    if (this.validateDate(this.state.date)) {\n      e.preventDefault();\n      this.setState({\n        errors: { date: 'Invalid date' }\n      });\n      return;\n    }\n\n    if (this.state.date === '') {\n      e.preventDefault();\n      this.setState({\n        errors: { date: 'Date is required' }\n      });\n      return;\n    }\n\n    if (this.validateTime(this.state.time)) {\n      e.preventDefault();\n      this.setState({\n        errors: { time: 'Invalid time' }\n      });\n      return;\n    }\n\n    if (this.state.time === '') {\n      e.preventDefault();\n      this.setState({\n        errors: { time: 'Time number is required' }\n      });\n      return;\n    }\n\n    const a = '2019-11-17';\n    const b = '17:11';\n    const c = a.concat(' ').concat(b);\n    console.log(c);\n\n    if (\n      this.state.errors.a_number === '' &&\n      this.state.errors.date === '' &&\n      this.state.errors.time === ''\n    ) {\n      fetch('http://localhost/conferenceCallAPI.php', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          a_number: this.state.a_number,\n          first_time: this.state.date.concat(' ').concat(this.state.time)\n        })\n      }).catch(error => this.setState({ error }));\n    } else {\n      console.log(this.state.errors);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"Name\">Name</label>\n              <input\n                onChange={this.onChange}\n                type=\"text\"\n                value={this.state.name}\n                className=\"form-control\"\n                placeholder=\"Enter Your Name\"\n                name=\"name\"\n              />\n              {this.state.errors.name ? (\n                <small className=\"form-text text-danger\">\n                  {this.state.errors.name}\n                </small>\n              ) : null}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"public_number\">Phone Number</label>\n              <input\n                onChange={this.onChange}\n                type=\"text\"\n                value={this.state.public_number}\n                className=\"form-control\"\n                placeholder=\"Enter Your Phone Number\"\n                name=\"public_number\"\n              />\n              {this.state.errors.public_number ? (\n                <small className=\"form-text text-danger\">\n                  {this.state.errors.public_number}\n                </small>\n              ) : null}\n            </div>\n            <button\n              onClick={this.postDataHandler}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddReferenceCall;\n"]},"metadata":{},"sourceType":"module"}