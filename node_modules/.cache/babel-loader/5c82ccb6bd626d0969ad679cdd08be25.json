{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app/src/PhoneList.js\";\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport './PhoneList.css';\nimport { Button, Modal } from 'semantic-ui-react';\n\nclass PhoneList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n      console.log('AA');\n      this.setState({\n        closeOnEscape,\n        closeOnDimmerClick,\n        open: true\n      });\n    };\n\n    this.close = () => this.setState({\n      open: false\n    });\n\n    this.deleteShortNumberHandler = e => {\n      this.closeConfigShow(false, true); //this.props.onSubmitSN(e.target.id);\t\n    };\n\n    this.deletePublicNumberHandler = e => {\n      this.props.onSubmitPN(e.target.id);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          closeOnEscape = _this$state.closeOnEscape,\n          closeOnDimmerClick = _this$state.closeOnDimmerClick;\n    const cells = this.props.data.map(item => {\n      return React.createElement(Table.Row, {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '10%',\n          border: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, item.id), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '30%',\n          border: '1px solid #ccc',\n          borderRightColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, item.number), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '10%',\n          border: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: item.id,\n        onClick: this.deletePublicNumberHandler,\n        className: \"ui icon button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        \"aria-hidden\": \"true\",\n        className: \"trash alternate icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '20%',\n          border: '1px solid #ccc',\n          borderRightColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, item.short_number), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        style: {\n          width: '10%',\n          border: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, item.short_number !== undefined ? React.createElement(\"button\", {\n        id: item.short_number,\n        onClick: this.deleteShortNumberHandler,\n        className: \"ui icon button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        \"aria-hidden\": \"true\",\n        className: \"trash alternate icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })) : null));\n    }); //celled\n    //collapsing\n\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: '20%',\n        marginRight: '20%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Table, {\n      celled: true,\n      structured: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      textAlign: \"center\",\n      style: {\n        border: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Table.HeaderCell, {\n      textAlign: \"center\",\n      style: {\n        border: '1px solid #ccc'\n      },\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Public Number\"), React.createElement(Table.HeaderCell, {\n      textAlign: \"center\",\n      style: {\n        border: '1px solid #ccc'\n      },\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Short Number\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, cells)), React.createElement(Modal, {\n      open: open,\n      closeOnEscape: closeOnEscape,\n      onClose: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Delete Your Account\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Are you sure you want to delete your account\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.close,\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"No\"), React.createElement(Button, {\n      onClick: this.close,\n      positive: true,\n      labelPosition: \"right\",\n      icon: \"checkmark\",\n      content: \"Yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default PhoneList;\n/*\nrender() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<Table.Row>\n\t\t\t\t\t<Table.Cell>{shortNumber.id}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.short_number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' >{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<Table celled structured>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Public Number</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Short Number</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n*/\n\n/*render() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td style={{width: '10%'}}>{shortNumber.id}</td>\n\t\t\t\t\t<td style={{width: '10%', border: '1px solid #ccc', borderRightColor: 'transparent'}}>{shortNumber.number}</td>\n\t\t\t\t\t<td><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></td>\n\t\t\t\t\t<td>{shortNumber.short_number}</td>\n\t\t\t\t\t<td>{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<table className=\"ui celled structured table\" style={{tableLayout: 'auto', borderCollapse: 'collapse', width: '100%'}}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Id</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Public Number</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Short Number</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n*/","map":{"version":3,"sources":["/home/cuong/react_projects/my-app/src/PhoneList.js"],"names":["React","Table","Button","Modal","PhoneList","Component","state","open","closeConfigShow","closeOnEscape","closeOnDimmerClick","console","log","setState","close","deleteShortNumberHandler","e","deletePublicNumberHandler","props","onSubmitPN","target","id","render","cells","data","map","item","width","border","borderRightColor","number","short_number","undefined","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport './PhoneList.css';\nimport { Button, Modal } from 'semantic-ui-react';\n\nclass PhoneList extends React.Component {\n\n\tstate = { open: false }\n\n\tcloseConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n\t\tconsole.log('AA')\n\t\tthis.setState({ closeOnEscape, closeOnDimmerClick, open: true })\n\t}\n\n\tclose = () => this.setState({ open: false })\n\n\tdeleteShortNumberHandler = (e) => {\n\t\tthis.closeConfigShow(false, true);\n\t\t//this.props.onSubmitSN(e.target.id);\t\n\t}\n\n\tdeletePublicNumberHandler = (e) => {\n\t\tthis.props.onSubmitPN(e.target.id)\n\t}\n\n\trender() {\n\n\t\tconst { open, closeOnEscape, closeOnDimmerClick } = this.state;\n\n\t\tconst cells = this.props.data.map(item => {\n\t\t\treturn (\n\t\t\t\t<Table.Row key={item.id}>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{ width: '10%', border: '1px solid #ccc' }}>{item.id}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{ width: '30%', border: '1px solid #ccc', borderRightColor: 'transparent' }}>{item.number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{ width: '10%', border: '1px solid #ccc' }}><button id={item.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{ width: '20%', border: '1px solid #ccc', borderRightColor: 'transparent' }}>{item.short_number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' style={{ width: '10%', border: '1px solid #ccc' }}>{item.short_number !== undefined ? <button id={item.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '20%', marginRight: '20%' }}>\n\t\t\t\t<Table celled structured>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' style={{ border: '1px solid #ccc' }}>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' style={{ border: '1px solid #ccc' }} colSpan='2'>Public Number</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' style={{ border: '1px solid #ccc' }} colSpan='2'>Short Number</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{cells}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t\t<Modal\n\t\t\t\t\topen={open}\n\t\t\t\t\tcloseOnEscape={closeOnEscape}\n\t\t\t\t\tonClose={this.close}\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header>Delete Your Account</Modal.Header>\n\t\t\t\t\t<Modal.Content>\n\t\t\t\t\t\t<p>Are you sure you want to delete your account</p>\n\t\t\t\t\t</Modal.Content>\n\t\t\t\t\t<Modal.Actions>\n\t\t\t\t\t\t<Button onClick={this.close} negative>\n\t\t\t\t\t\t\tNo\n            \t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={this.close}\n\t\t\t\t\t\t\tpositive\n\t\t\t\t\t\t\tlabelPosition='right'\n\t\t\t\t\t\t\ticon='checkmark'\n\t\t\t\t\t\t\tcontent='Yes'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Modal.Actions>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default PhoneList;\n\n/*\nrender() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<Table.Row>\n\t\t\t\t\t<Table.Cell>{shortNumber.id}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.short_number}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center' >{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<Table celled structured>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Public Number</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' colSpan='2'>Short Number</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n*/\n\n/*render() {\n\n\t\tconst shortNumbers = this.props.shortNumbers.map(shortNumber => {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td style={{width: '10%'}}>{shortNumber.id}</td>\n\t\t\t\t\t<td style={{width: '10%', border: '1px solid #ccc', borderRightColor: 'transparent'}}>{shortNumber.number}</td>\n\t\t\t\t\t<td><button id={shortNumber.id} onClick={this.deletePublicNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button></td>\n\t\t\t\t\t<td>{shortNumber.short_number}</td>\n\t\t\t\t\t<td>{shortNumber.short_number !== undefined ? <button id={shortNumber.short_number} onClick={this.deleteShortNumberHandler} className=\"ui icon button\"><i aria-hidden=\"true\" className=\"trash alternate icon\"></i></button> : null}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t\t//celled\n\t\t//collapsing\n\t\treturn (\n\t\t\t<div style={{ marginLeft: '50px', marginRight: '50px' }}>\n\t\t\t\t<table className=\"ui celled structured table\" style={{tableLayout: 'auto', borderCollapse: 'collapse', width: '100%'}}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Id</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Public Number</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Short Number</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{shortNumbers}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n*/"]},"metadata":{},"sourceType":"module"}