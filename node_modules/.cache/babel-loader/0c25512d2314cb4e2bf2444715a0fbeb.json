{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app-auth/src/APICalls/AddReferenceCall.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass AddReferenceCall extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: '',\n      time: '',\n      error: null,\n      errors: {\n        date: '',\n        time: ''\n      }\n    };\n\n    this.validateTime = inputText => {\n      const timeformat = /(2[0-3]|[01][0-9]):[0-5][0-9]/;\n\n      if (inputText.value.match(timeformat)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.validateDate = inputText => {\n      const dateformat = /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/; // Match the date format through regular expression\n\n      if (inputText.value.match(dateformat)) {\n        const pdate = inputText.value.split('-');\n        const dd = parseInt(pdate[0]);\n        const mm = parseInt(pdate[1]);\n        const yy = parseInt(pdate[2]); // Create list of days of a month [assume there is no leap year by default]\n\n        const ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        if (mm == 1 || mm > 2) {\n          if (dd > ListofDays[mm - 1]) {\n            return false;\n          }\n        }\n\n        if (mm == 2) {\n          let lyear = false;\n\n          if (!(yy % 4) && yy % 100 || !(yy % 400)) {\n            lyear = true;\n          }\n\n          if (lyear == false && dd >= 29) {\n            return false;\n          }\n\n          if (lyear == true && dd > 29) {\n            return false;\n          }\n        }\n      } else {\n        return false;\n      }\n    };\n\n    this.onChange = e => {\n      if (this.state.errors.date !== '' || this.state.errors.time !== '') {\n        this.setState({\n          errors: {\n            date: '',\n            time: ''\n          }\n        });\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.postDataHandler = e => {\n      if (this.state.date === '' && this.state.time === '') {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            date: 'Date is required',\n            time: 'Time number is required'\n          }\n        });\n        return;\n      }\n\n      if (this.validateDate(this.state.date)) {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            date: 'Invalid date'\n          }\n        });\n        return;\n      }\n\n      if (this.state.date === '') {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            date: 'Date is required'\n          }\n        });\n        return;\n      }\n\n      if (this.validateTime(this.state.time)) {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            time: 'Invalid time'\n          }\n        });\n        return;\n      }\n\n      if (this.state.time === '') {\n        e.preventDefault();\n        this.setState({\n          errors: {\n            time: 'Time number is required'\n          }\n        });\n        return;\n      }\n\n      if (this.state.errors.date === '' && this.state.errors.time === '') {\n        const first_time = this.state.date.concat(' ').concat(this.state.time);\n        this.props.sendData(first_time);\n      }\n      /* if (this.state.errors.date === '' && this.state.errors.time === '') {\n        fetch('http://localhost/conferenceCallAPI.php', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json'\n          },\n          body: JSON.stringify({\n            a_number: this.state.a_number,\n            first_time: this.state.date.concat(' ').concat(this.state.time)\n          })\n        }).catch(error => this.setState({ error }));\n      } else {\n        console.log(this.state.errors);\n      } */\n\n    };\n\n    this.postDataHandler = () => {\n      console.log(this.props.conferenceNumbers);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      type: \"text\",\n      value: this.state.date,\n      className: \"form-control\",\n      placeholder: \"YYYY-MM-DD\",\n      name: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.state.errors.date ? React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.errors.date) : null), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Tine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Time\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      type: \"text\",\n      value: this.state.time,\n      className: \"form-control\",\n      placeholder: \"HH:MM\",\n      name: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), this.state.errors.time ? React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.errors.time) : null), React.createElement(\"button\", {\n      onClick: this.postDataHandler,\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    conferenceNumbers: state.conference.conferenceNumbers\n  };\n};\n\nexport default connect(mapStateToProps)(AddReferenceCall);","map":{"version":3,"sources":["/home/cuong/react_projects/my-app-auth/src/APICalls/AddReferenceCall.js"],"names":["React","connect","AddReferenceCall","Component","state","date","time","error","errors","validateTime","inputText","timeformat","value","match","validateDate","dateformat","pdate","split","dd","parseInt","mm","yy","ListofDays","lyear","onChange","e","setState","target","name","postDataHandler","preventDefault","first_time","concat","props","sendData","console","log","conferenceNumbers","render","mapStateToProps","conference"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nclass AddReferenceCall extends React.Component {\n  state = {\n    date: '',\n    time: '',\n    error: null,\n    errors: {\n      date: '',\n      time: ''\n    }\n  };\n\n  validateTime = inputText => {\n    const timeformat = /(2[0-3]|[01][0-9]):[0-5][0-9]/;\n    if (inputText.value.match(timeformat)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  validateDate = inputText => {\n    const dateformat = /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/;\n    // Match the date format through regular expression\n    if (inputText.value.match(dateformat)) {\n      const pdate = inputText.value.split('-');\n      const dd = parseInt(pdate[0]);\n      const mm = parseInt(pdate[1]);\n      const yy = parseInt(pdate[2]);\n      // Create list of days of a month [assume there is no leap year by default]\n      const ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n      if (mm == 1 || mm > 2) {\n        if (dd > ListofDays[mm - 1]) {\n          return false;\n        }\n      }\n      if (mm == 2) {\n        let lyear = false;\n        if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\n          lyear = true;\n        }\n        if (lyear == false && dd >= 29) {\n          return false;\n        }\n        if (lyear == true && dd > 29) {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  };\n\n  onChange = e => {\n    if (this.state.errors.date !== '' || this.state.errors.time !== '') {\n      this.setState({\n        errors: {\n          date: '',\n          time: ''\n        }\n      });\n    }\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  postDataHandler = e => {\n    if (this.state.date === '' && this.state.time === '') {\n      e.preventDefault();\n      this.setState({\n        errors: {\n          date: 'Date is required',\n          time: 'Time number is required'\n        }\n      });\n      return;\n    }\n\n    if (this.validateDate(this.state.date)) {\n      e.preventDefault();\n      this.setState({\n        errors: { date: 'Invalid date' }\n      });\n      return;\n    }\n\n    if (this.state.date === '') {\n      e.preventDefault();\n      this.setState({\n        errors: { date: 'Date is required' }\n      });\n      return;\n    }\n\n    if (this.validateTime(this.state.time)) {\n      e.preventDefault();\n      this.setState({\n        errors: { time: 'Invalid time' }\n      });\n      return;\n    }\n\n    if (this.state.time === '') {\n      e.preventDefault();\n      this.setState({\n        errors: { time: 'Time number is required' }\n      });\n      return;\n    }\n\n    if (this.state.errors.date === '' && this.state.errors.time === '') {\n      const first_time = this.state.date.concat(' ').concat(this.state.time);\n      this.props.sendData(first_time);\n    }\n\n    /* if (this.state.errors.date === '' && this.state.errors.time === '') {\n      fetch('http://localhost/conferenceCallAPI.php', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          a_number: this.state.a_number,\n          first_time: this.state.date.concat(' ').concat(this.state.time)\n        })\n      }).catch(error => this.setState({ error }));\n    } else {\n      console.log(this.state.errors);\n    } */\n  };\n\n  postDataHandler = () => {\n    console.log(this.props.conferenceNumbers);\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"Date\">Date</label>\n              <input\n                onChange={this.onChange}\n                type=\"text\"\n                value={this.state.date}\n                className=\"form-control\"\n                placeholder=\"YYYY-MM-DD\"\n                name=\"date\"\n              />\n              {this.state.errors.date ? (\n                <small className=\"form-text text-danger\">\n                  {this.state.errors.date}\n                </small>\n              ) : null}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Tine\">Time</label>\n              <input\n                onChange={this.onChange}\n                type=\"text\"\n                value={this.state.time}\n                className=\"form-control\"\n                placeholder=\"HH:MM\"\n                name=\"time\"\n              />\n              {this.state.errors.time ? (\n                <small className=\"form-text text-danger\">\n                  {this.state.errors.time}\n                </small>\n              ) : null}\n            </div>\n            <button\n              onClick={this.postDataHandler}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    conferenceNumbers: state.conference.conferenceNumbers\n  };\n};\n\nexport default connect(mapStateToProps)(AddReferenceCall);\n"]},"metadata":{},"sourceType":"module"}