{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app/src/EditNameModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\nimport EditName from './EditName';\n\nclass EditNameModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.open = () => this.setState({\n      open: true\n    });\n\n    this.close = () => this.setState({\n      open: false\n    });\n\n    this.display = () => {\n      if (this.props.display === \"false\") {\n        return 'none';\n      }\n    };\n  }\n\n  render() {\n    const open = this.state.open;\n    return React.createElement(Modal, {\n      open: open,\n      onOpen: this.open,\n      onClose: this.close,\n      size: \"small\",\n      trigger: React.createElement(Button, {\n        style: {\n          display: this.display()\n        },\n        style: {\n          paddingRight: '3px',\n          paddingLeft: '11px',\n          width: '38.51px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        \"aria-hidden\": \"true\",\n        className: \"pencil alternate icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Enter a new name\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(EditName, {\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default EditNameModal;","map":{"version":3,"sources":["/home/cuong/react_projects/my-app/src/EditNameModal.js"],"names":["React","Component","Button","Modal","EditName","EditNameModal","state","open","setState","close","display","props","render","paddingRight","paddingLeft","width","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAD4B;;AAAA,SAGpCA,IAHoC,GAG7B,MAAM,KAAKC,QAAL,CAAc;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAd,CAHuB;;AAAA,SAIpCE,KAJoC,GAI5B,MAAM,KAAKD,QAAL,CAAc;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAd,CAJsB;;AAAA,SAMpCG,OANoC,GAM1B,MAAM;AACd,UAAG,KAAKC,KAAL,CAAWD,OAAX,KAAuB,OAA1B,EAAmC;AAC/B,eAAO,MAAP;AACH;AACF,KAVmC;AAAA;;AAapCE,EAAAA,MAAM,GAAG;AAAA,UACCL,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAGP,WACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,MAAM,EAAE,KAAKA,IAFf;AAGE,MAAA,OAAO,EAAE,KAAKE,KAHhB;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,OAAO,EACL,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,KAAKA,OAAL;AAAX,SAAf;AAA6C,QAAA,KAAK,EAAE;AAAEG,UAAAA,YAAY,EAAE,KAAhB;AAAuBC,UAAAA,WAAW,EAAE,MAApC;AAA4CC,UAAAA,KAAK,EAAE;AAAnD,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,uBAAY,MAAf;AAAsB,QAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXF,EAYE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWK,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADA,CAZF,CADF;AAkBD;;AAlCmC;;AAqCtC,eAAeX,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Modal } from 'semantic-ui-react';\nimport EditName from './EditName';\n\nclass EditNameModal extends Component {\n  state = { open: false };\n\n  open = () => this.setState({ open: true });\n  close = () => this.setState({ open: false });\n\n  display = () => {\n    if(this.props.display === \"false\") {\n        return 'none';\n    }\n  };\n  \n\n  render() {\n    const { open } = this.state;  \n\n    return (\n      <Modal\n        open={open}\n        onOpen={this.open}\n        onClose={this.close}\n        size=\"small\"\n        trigger={\n          <Button style={{ display: this.display() }}  style={{ paddingRight: '3px', paddingLeft: '11px', width: '38.51px' }}>\n            <i aria-hidden=\"true\" className=\"pencil alternate icon\"></i> \n          </Button>\n        }\n      >\n        <Modal.Header>Enter a new name</Modal.Header>\n        <Modal.Content>\n        <div><EditName id={this.props.id}/></div>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default EditNameModal\n"]},"metadata":{},"sourceType":"module"}