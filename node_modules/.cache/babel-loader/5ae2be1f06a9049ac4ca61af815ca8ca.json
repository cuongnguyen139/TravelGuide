{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app-auth/src/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Auth.css\";\nimport * as actions from \"../store/actions/index\";\nimport Spinner from \"../components/UI/Spinner/Spinner\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      submitted: false,\n      error: \"\"\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        submitted: true\n      });\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password; // stop here if form is invalid\n\n      if (!(email && password)) {\n        return;\n      }\n\n      this.props.onAuth(this.state.email, this.state.password);\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          submitted = _this$state2.submitted,\n          loading = _this$state2.loading,\n          error = _this$state2.error;\n    let form = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-login\",\n      id: \"logBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui centered grid container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nine wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui fluid card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\" + (submitted && !email ? \" has-error\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), submitted && !email && React.createElement(\"div\", {\n      style: {\n        paddingTop: \"8px\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Email is required\")), React.createElement(\"div\", {\n      className: \"field\" + (submitted && !password ? \" has-error\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), submitted && !password && React.createElement(\"div\", {\n      style: {\n        paddingTop: \"8px\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Password is required\")), React.createElement(\"button\", {\n      style: {\n        margin: \"0 auto\",\n        display: \"block\"\n      },\n      className: \"ui primary labeled icon button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"unlock alternate icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), \"Login\"), error && React.createElement(\"div\", {\n      style: {\n        paddingTop: \"8px\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, error))))))));\n\n    if (this.props.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.props.error.messsage);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, form);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/cuong/react_projects/my-app-auth/src/Auth/Auth.js"],"names":["React","Component","connect","actions","Spinner","Auth","state","email","password","submitted","error","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","props","onAuth","render","loading","form","paddingTop","color","margin","display","errorMessage","messsage","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Auth.css\";\nimport * as actions from \"../store/actions/index\";\nimport Spinner from \"../components/UI/Spinner/Spinner\";\n\nclass Auth extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    submitted: false,\n    error: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState({ submitted: true });\n    const { email, password } = this.state;\n\n    // stop here if form is invalid\n    if (!(email && password)) {\n      return;\n    }\n\n    this.props.onAuth(this.state.email, this.state.password);\n  };\n\n  render() {\n    const { email, password, submitted, loading, error } = this.state;\n\n    let form = (\n      <div>\n        <div className=\"page-login\" id=\"logBox\">\n          <div className=\"ui centered grid container\">\n            <div className=\"nine wide column\">\n              <div className=\"ui fluid card\">\n                <div className=\"content\">\n                  <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                    <div\n                      className={\n                        \"field\" + (submitted && !email ? \" has-error\" : \"\")\n                      }\n                    >\n                      <label htmlFor=\"email\">Email</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.handleChange}\n                      />\n                      {submitted && !email && (\n                        <div style={{ paddingTop: \"8px\", color: \"red\" }}>\n                          Email is required\n                        </div>\n                      )}\n                    </div>\n                    <div\n                      className={\n                        \"field\" + (submitted && !password ? \" has-error\" : \"\")\n                      }\n                    >\n                      <label htmlFor=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        value={password}\n                        onChange={this.handleChange}\n                      />\n                      {submitted && !password && (\n                        <div style={{ paddingTop: \"8px\", color: \"red\" }}>\n                          Password is required\n                        </div>\n                      )}\n                    </div>\n                    <button\n                      style={{ margin: \"0 auto\", display: \"block\" }}\n                      className=\"ui primary labeled icon button\"\n                      type=\"submit\"\n                    >\n                      <i className=\"unlock alternate icon\" />\n                      Login\n                    </button>\n\n                    {error && (\n                      <div style={{ paddingTop: \"8px\", color: \"red\" }}>\n                        {error}\n                      </div>\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.messsage}</p>;\n    }\n\n    return <div>{form}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Auth);\n"]},"metadata":{},"sourceType":"module"}