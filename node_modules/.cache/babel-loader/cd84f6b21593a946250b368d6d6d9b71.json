{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app-auth/src/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Auth.css\";\nimport * as actions from \"../store/actions/index\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      submitted: false,\n      loading: false,\n      error: \"\"\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onAuth(this.state.email, this.state.password);\n      this.setState({\n        submitted: true\n      });\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password; // stop here if form is invalid\n\n      if (!(email && password)) {\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          submitted = _this$state2.submitted,\n          error = _this$state2.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-login\",\n      id: \"logBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui centered grid container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nine wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui fluid card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\" + (submitted && !uemailsername ? \" has-error\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), submitted && !email && React.createElement(\"div\", {\n      style: {\n        paddingTop: \"8px\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Username is required\")), React.createElement(\"div\", {\n      className: \"field\" + (submitted && !password ? \" has-error\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), submitted && !password && React.createElement(\"div\", {\n      style: {\n        paddingTop: \"8px\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Password is required\")), React.createElement(\"button\", {\n      style: {\n        margin: \"0 auto\",\n        display: \"block\"\n      },\n      className: \"ui primary labeled icon button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"unlock alternate icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), \"Login\"), error && React.createElement(\"div\", {\n      style: {\n        paddingTop: \"8px\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, error))))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/cuong/react_projects/my-app-auth/src/Auth/Auth.js"],"names":["React","Component","connect","actions","Auth","state","email","password","submitted","loading","error","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","props","onAuth","render","uemailsername","paddingTop","color","margin","display","mapDispatchToProps","dispatch","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Auth.css\";\nimport * as actions from \"../store/actions/index\";\n\nclass Auth extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    submitted: false,\n    loading: false,\n    error: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAuth(this.state.email, this.state.password);\n    this.setState({ submitted: true });\n    const { email, password } = this.state;\n\n    // stop here if form is invalid\n    if (!(email && password)) {\n      return;\n    }\n\n    this.setState({ loading: true });\n  };\n\n  render() {\n    const { email, password, submitted, error } = this.state;\n    return (\n      <div>\n        <div className=\"page-login\" id=\"logBox\">\n          <div className=\"ui centered grid container\">\n            <div className=\"nine wide column\">\n              <div className=\"ui fluid card\">\n                <div className=\"content\">\n                  <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                    <div\n                      className={\n                        \"field\" +\n                        (submitted && !uemailsername ? \" has-error\" : \"\")\n                      }\n                    >\n                      <label htmlFor=\"username\">Email</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.handleChange}\n                      />\n                      {submitted && !email && (\n                        <div style={{ paddingTop: \"8px\", color: \"red\" }}>\n                          Username is required\n                        </div>\n                      )}\n                    </div>\n                    <div\n                      className={\n                        \"field\" + (submitted && !password ? \" has-error\" : \"\")\n                      }\n                    >\n                      <label htmlFor=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        value={password}\n                        onChange={this.handleChange}\n                      />\n                      {submitted && !password && (\n                        <div style={{ paddingTop: \"8px\", color: \"red\" }}>\n                          Password is required\n                        </div>\n                      )}\n                    </div>\n                    <button\n                      style={{ margin: \"0 auto\", display: \"block\" }}\n                      className=\"ui primary labeled icon button\"\n                      type=\"submit\"\n                    >\n                      <i className=\"unlock alternate icon\" />\n                      Login\n                    </button>\n                    {error && (\n                      <div style={{ paddingTop: \"8px\", color: \"red\" }}>\n                        {error}\n                      </div>\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Auth);\n"]},"metadata":{},"sourceType":"module"}