{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeOut = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBkrfTswnae6QoKwM1vLoANEQZ8nBYGMNk\", authData).then(response => {\n      localStorage.setItem(\"token\", response.data.idToken);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeOut(response.data.expiresIn));\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};","map":{"version":3,"sources":["/home/cuong/react_projects/my-app-auth/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","logout","AUTH_LOGOUT","checkAuthTimeOut","expirationTime","dispatch","setTimeout","authFail","error","AUTH_FAIL","auth","email","password","authData","returnSecureToken","post","then","response","localStorage","setItem","data","localId","expiresIn","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,YADb;AAELC,IAAAA,OAAO,EAAEH,KAFJ;AAGLC,IAAAA,MAAM,EAAEA;AAHH,GAAP;AAKD,CANM;AAQP,OAAO,MAAMG,MAAM,GAAG,MAAM;AAC1B,SAAO;AACLP,IAAAA,IAAI,EAAEH,WAAW,CAACW;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAGC,cAAc,IAAI;AAChD,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACJ,MAAM,EAAP,CAAR;AACD,KAFS,EAEPG,cAAc,GAAG,IAFV,CAAV;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,IAAI,EAAEH,WAAW,CAACkB,SADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACvC,SAAOP,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACZ,SAAS,EAAV,CAAR;AACA,UAAMoB,QAAQ,GAAG;AACfF,MAAAA,KAAK,EAAEA,KADQ;AAEfC,MAAAA,QAAQ,EAAEA,QAFK;AAGfE,MAAAA,iBAAiB,EAAE;AAHJ,KAAjB;AAKAtB,IAAAA,KAAK,CACFuB,IADH,CAEI,mHAFJ,EAGIF,QAHJ,EAKGG,IALH,CAKQC,QAAQ,IAAI;AAChBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,QAAQ,CAACG,IAAT,CAAcpB,OAA5C;AACAK,MAAAA,QAAQ,CAACT,WAAW,CAACqB,QAAQ,CAACG,IAAT,CAAcpB,OAAf,EAAwBiB,QAAQ,CAACG,IAAT,CAAcC,OAAtC,CAAZ,CAAR;AACAhB,MAAAA,QAAQ,CAACF,gBAAgB,CAACc,QAAQ,CAACG,IAAT,CAAcE,SAAf,CAAjB,CAAR;AACD,KATH,EAUGC,KAVH,CAUSC,GAAG,IAAI;AACZnB,MAAAA,QAAQ,CAACE,QAAQ,CAACiB,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBZ,KAAnB,CAAT,CAAR;AACD,KAZH;AAaD,GApBD;AAqBD,CAtBM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeOut = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios\n      .post(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBkrfTswnae6QoKwM1vLoANEQZ8nBYGMNk\",\n        authData\n      )\n      .then(response => {\n        localStorage.setItem(\"token\", response.data.idToken);\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeOut(response.data.expiresIn));\n      })\n      .catch(err => {\n        dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}