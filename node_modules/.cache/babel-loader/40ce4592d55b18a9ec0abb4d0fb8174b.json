{"ast":null,"code":"var _jsxFileName = \"/home/cuong/react_projects/my-app/src/PhoneList.js\";\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nconst PhoneList = props => {\n  const shortNumbers = props.shortNumbers.map(shortNumber => {\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, shortNumber.id), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, shortNumber.number), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"pencil alternate icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"trash alternate icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, shortNumber.short_number), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, shortNumber.short_number !== undefined ? React.createElement(\"i\", {\n      class: \"pencil alternate icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }) : null), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, shortNumber.short_number !== undefined ? React.createElement(\"i\", {\n      class: \"trash alternate icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }) : null));\n  });\n  return React.createElement(Table, {\n    collapsing: true,\n    structured: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Id\"), React.createElement(Table.HeaderCell, {\n    colSpan: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Public Number\"), React.createElement(Table.HeaderCell, {\n    colSpan: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Short Number\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, shortNumbers));\n};\n\nexport default PhoneList;\n/*\nimport React from 'react';\nimport Demo from './Demo';\nimport { Table } from 'semantic-ui-react';\n\nconst PhoneList = props => {\n\tconst shortNumbers = props.shortNumbers.map(shortNumber => {\n\t\treturn (\n\t\t\t<Table.Body>\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Table.Cell>{shortNumber.id}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>{shortNumber.number}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell textAlign='right'>{shortNumber.short_number}</Table.Cell>\n\t\t\t\t\t</Table.Row>\n\t\t\t</Table.Body>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<Table celled inverted selectable>\n\t\t\t\t<Table.Header>\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Table.HeaderCell>Name</Table.HeaderCell>\n\t\t\t\t\t\t<Table.HeaderCell>Status</Table.HeaderCell>\n\t\t\t\t\t\t<Table.HeaderCell>Notes</Table.HeaderCell>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t</Table.Header>\n\t\t\t\t{shortNumbers}\n\t\t\t</Table>\n\t\t</div>\n\t);\n};\n\nexport default PhoneList;\n*/\n\n/*\nconst PhoneList = props => {\n  const shortNumbers = props.shortNumbers.map(shortNumber => {\n\t  return (\n\t\t\t\t  <div>\n\t\t\t  <div className=\"ui center aligned grid\">\n\t\t\t\t  <div className=\"four wide column\">{shortNumber.id}</div>\n\t\t\t  <div className=\"four wide column\">{shortNumber.number}<i class=\"ellipsis vertical icon\"></i></div>\n\t\t\t  <div className=\"four wide column\">\n\t\t\t\t  {shortNumber.short_number}\n\t\t\t\t  {console.log(shortNumber.short_number)}\n\t\t\t\t  {shortNumber.short_number !== undefined ? <i class=\"ellipsis vertical icon\"></i> : null}\n\t\t\t  </div>\n\t\t\t  <div className=\"four wide column\">\n\t\t\t\t  <button className=\"ui button\">Delete</button>\n\t\t\t\t\t  <div className=\"ui button\" tabIndex=\"0\">Modify</div>\n\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t  </div>\n\t  );\n  });\n\n  return <div>{shortNumbers}</div>;\n};\n*/","map":{"version":3,"sources":["/home/cuong/react_projects/my-app/src/PhoneList.js"],"names":["React","Table","PhoneList","props","shortNumbers","map","shortNumber","id","number","short_number","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAGD,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuBC,WAAW,IAAI;AAC1D,WACC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaA,WAAW,CAACC,EAAzB,CADD,EAEC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaD,WAAW,CAACE,MAAzB,CAFD,EAGC,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B;AAAG,MAAA,KAAK,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAHD,EAIC,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B;AAAG,MAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAJD,EAKC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaF,WAAW,CAACG,YAAzB,CALD,EAMC,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,WAAW,CAACG,YAAZ,KAA6BC,SAA7B,GAAyC;AAAG,MAAA,KAAK,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC,GAAiF,IAAjH,CAND,EAOC,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCJ,WAAW,CAACG,YAAZ,KAA6BC,SAA7B,GAAyC;AAAG,MAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC,GAAgF,IAAjH,CAPD,CADD;AAWA,GAZoB,CAArB;AAcA,SACC,oBAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAkB,IAAA,UAAU,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC,oBAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,OAAO,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFD,EAGC,oBAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,OAAO,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHD,CADD,CADD,EAQC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,YADF,CARD,CADD;AAcA,CA7BD;;AA+BA,eAAeF,SAAf;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nconst PhoneList = props => {\n\tconst shortNumbers = props.shortNumbers.map(shortNumber => {\n\t\treturn (\n\t\t\t<Table.Row>\n\t\t\t\t<Table.Cell>{shortNumber.id}</Table.Cell>\n\t\t\t\t<Table.Cell>{shortNumber.number}</Table.Cell>\n\t\t\t\t<Table.Cell textAlign='center'><i class=\"pencil alternate icon\"></i></Table.Cell>\n\t\t\t\t<Table.Cell textAlign='center'><i class=\"trash alternate icon\"></i></Table.Cell>\n\t\t\t\t<Table.Cell>{shortNumber.short_number}</Table.Cell>\n\t\t\t\t<Table.Cell textAlign='center'>{shortNumber.short_number !== undefined ? <i class=\"pencil alternate icon\"></i> : null}</Table.Cell>\n\t\t\t\t<Table.Cell textAlign='center' >{shortNumber.short_number !== undefined ? <i class=\"trash alternate icon\"></i> : null}</Table.Cell>\n\t\t\t</Table.Row>\n\t\t);\n\t});\n\n\treturn (\n\t\t<Table collapsing structured>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Row>\n\t\t\t\t\t<Table.HeaderCell>Id</Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell colSpan='3'>Public Number</Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell colSpan='3'>Short Number</Table.HeaderCell>\n\t\t\t\t</Table.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n\t\t\t\t{shortNumbers}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default PhoneList;\n\n\n\n/*\nimport React from 'react';\nimport Demo from './Demo';\nimport { Table } from 'semantic-ui-react';\n\nconst PhoneList = props => {\n\tconst shortNumbers = props.shortNumbers.map(shortNumber => {\n\t\treturn (\n\t\t\t<Table.Body>\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Table.Cell>{shortNumber.id}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>{shortNumber.number}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell textAlign='right'>{shortNumber.short_number}</Table.Cell>\n\t\t\t\t\t</Table.Row>\n\t\t\t</Table.Body>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<Table celled inverted selectable>\n\t\t\t\t<Table.Header>\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Table.HeaderCell>Name</Table.HeaderCell>\n\t\t\t\t\t\t<Table.HeaderCell>Status</Table.HeaderCell>\n\t\t\t\t\t\t<Table.HeaderCell>Notes</Table.HeaderCell>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t</Table.Header>\n\t\t\t\t{shortNumbers}\n\t\t\t</Table>\n\t\t</div>\n\t);\n};\n\nexport default PhoneList;\n*/\n\n/*\nconst PhoneList = props => {\n  const shortNumbers = props.shortNumbers.map(shortNumber => {\n\t  return (\n\t\t\t\t  <div>\n\t\t\t  <div className=\"ui center aligned grid\">\n\t\t\t\t  <div className=\"four wide column\">{shortNumber.id}</div>\n\t\t\t  <div className=\"four wide column\">{shortNumber.number}<i class=\"ellipsis vertical icon\"></i></div>\n\t\t\t  <div className=\"four wide column\">\n\t\t\t\t  {shortNumber.short_number}\n\t\t\t\t  {console.log(shortNumber.short_number)}\n\t\t\t\t  {shortNumber.short_number !== undefined ? <i class=\"ellipsis vertical icon\"></i> : null}\n\t\t\t  </div>\n\t\t\t  <div className=\"four wide column\">\n\t\t\t\t  <button className=\"ui button\">Delete</button>\n\t\t\t\t\t  <div className=\"ui button\" tabIndex=\"0\">Modify</div>\n\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t  </div>\n\t  );\n  });\n\n  return <div>{shortNumbers}</div>;\n};\n*/"]},"metadata":{},"sourceType":"module"}